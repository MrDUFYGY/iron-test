---
// Tipos
type Estado = 'pendiente' | 'iniciado' | 'sellado' | 'validado' | 'alertado';

export interface Props {
  titulo: string;
  descripcion: string;
  estado: Estado;
  subprocesos?: Record<string, boolean>; // true = activo (negro), false = inactivo (gris)
}

const { titulo, descripcion, estado, subprocesos = {} } = Astro.props;

// Función para obtener las clases CSS según el estado
function getClasesEstado(estado: string) {
  const clases = {
    base: 'text-xs font-medium px-2.5 py-0.5 rounded-full whitespace-nowrap',
    pendiente: 'bg-blue-100 text-blue-800',
    iniciado: 'bg-blue-100 text-blue-800',
    sellado: 'bg-yellow-100 text-yellow-800',
    validado: 'bg-green-100 text-green-800',
    alertado: 'bg-red-100 text-red-800'
  };
  
  return `${clases.base} ${clases[estado as keyof typeof clases] || ''}`;
}

// Función para obtener clases de subproceso (activo/inactivo)
function getClasesSubproceso(activo: boolean) {
  return `text-sm ${activo ? 'text-gray-900 font-medium' : 'text-gray-400'}`;
}

// Función para formatear el texto del estado
function formatearEstado(estado: string) {
  const estados: Record<string, string> = {
    pendiente: 'Pendiente',
    iniciado: 'Iniciado',
    sellado: 'Sellado',
    validado: 'Validado',
    alertado: 'Alertado'
  };
  
  return estados[estado] || estado;
}
---

<div class="proceso-card bg-white border border-gray-200 rounded-lg p-4 mb-4 shadow-sm hover:shadow-md transition-shadow">
  <!-- Encabezado del proceso principal -->
  <div class="flex justify-between items-start">
    <h3 class="text-lg font-semibold text-gray-800">{titulo}</h3>
    <span class={getClasesEstado(estado)}>
      {formatearEstado(estado)}
    </span>
  </div>
  
  <!-- Descripción del proceso -->
  <div class="mt-2 text-sm text-gray-700">
    {descripcion.split('\n').map((linea) => (
      <p class="mb-1">{linea}</p>
    ))}
  </div>
  
  <!-- Lista de subprocesos si existen -->
  {Object.keys(subprocesos).length > 0 && (
    <div class="mt-3 border-t border-gray-100 pt-3">
      <h4 class="text-sm font-medium text-gray-700 mb-2">Subprocesos:</h4>
      <ul class="space-y-2">
        {Object.entries(subprocesos).map(([nombre, activo]) => (
          <li class="flex items-center">
            <span class={getClasesSubproceso(activo)}>
              {nombre}
            </span>
          </li>
        ))}
      </ul>
    </div>
  )}
</div>

<style>
  .proceso-card {
    transition: all 0.2s ease;
  }
  
  .proceso-card:hover {
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  }
</style>
</style>