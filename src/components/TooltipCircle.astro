---
// TooltipCircle.astro

interface TooltipData {
  key: string;
  value: string;
}

const props = Astro.props; // Obtener las propiedades del componente
const tooltipData: TooltipData = props.data || { key: 'Ayuda', value: 'No hay información disponible.' }; // Proporcionar un valor por defecto

---

<div class="tooltip-circle-container">
  <div class="tooltip-circle" style=" cursor: pointer;">
    <span class="tooltip-text">{tooltipData.key}</span>
    <div class="tooltip-content">{tooltipData.value}</div>
  </div>
</div>

<style>
  .tooltip-circle-container {
    position: fixed;
    bottom: 2rem;
    transform: translateY(-50%);
    display: flex;
    flex-direction: column;
    gap: 1rem;|
    z-index: 1000;
  }

  .tooltip-circle {
    width: 2.5rem;
    height: 2.5rem;
    background-color: #4ade80;
    border-radius: 50%;
    position: relative;
    cursor: pointer;
    animation: breathing 2s infinite; /* Efecto de respiración */
  }

  @keyframes breathing {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
  }

  .tooltip-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-weight: bold;
    font-size: 0.75rem;
  }

  .tooltip-content {
    visibility: hidden;
    width: 200px;
    background-color: #f9f9f9;
    color: #333;
    text-align: center;
    border-radius: 6px;
    padding: 0.5rem;
    position: absolute;
    z-index: 1;
    bottom: 125%;
    left: 50%; /* Cambiar a 50% para centrar el tooltip */
    transform: translateX(-50%); /* Centrar el tooltip horizontalmente */
    margin-left: 4rem; /* Eliminar el margen izquierdo */
    box-shadow: 0 8px 16px rgba(0,0,0,0.2);
    opacity: 0;
    transition: opacity 0.3s;
  }

  .tooltip-circle:hover .tooltip-content {
    visibility: visible;
    opacity: 1;
  }
</style>