---

import "../styles/global.css";
import Layout from '../layouts/Layout.astro';

const fechaActual = new Date();
const fechaFormateada = fechaActual.toLocaleDateString('es-MX', {
    weekday: 'long',
    year: 'numeric',
    month: 'long',
    day: 'numeric'
});
const horaActual = fechaActual.toLocaleTimeString('es-MX', {
    hour: '2-digit',
    minute: '2-digit',
    second: '2-digit'
});

---

<Layout>
<div class="mx-auto bg-white rounded-xl shadow-md p-6">
    <div class="border-b-2 border-gray-200 pb-4 mb-6">
        <div class="flex justify-between items-start mb-4">
            <h1 class="text-xl font-bold uppercase">Vales por empresa</h1>
            <span class="bg-blue-100 text-blue-800 font-bold px-3 py-1 rounded">HD-141</span>
        </div>
        <div class="flex justify-between items-center">
            <div class="flex items-center">
                <span class="font-semibold mr-2">Operadora:</span>
                <span class="bg-gray-100 px-3 py-1 rounded font-medium">HIDROSINA PLUS SAPI DE C.V.</span>
            </div>
            <div class="text-right">
                <span class="font-semibold">Fecha:</span>
                <span class="ml-2">19 de abril de 2025</span>
            </div>
        </div>
    </div>

    <!-- Input de archivo -->
<div class="mb-6 bg-gray-50 p-4 rounded-xl border border-gray-200">
    <div class="flex items-center justify-between">
        <div class="flex items-center gap-2">
            <span class="text-green-600">✓</span>
            <span class="font-medium">Seleccion de empresas</span>
        </div>
        <button id="mostrarDetalles" class="text-blue-600 hover:text-blue-800 font-medium px-3 py-1 rounded-lg border border-blue-600 hover:bg-blue-50">
            Mostrar detalles
        </button>
    </div>

    <!-- Área de texto que aparece al hacer clic en el botón -->
<!-- Área de texto que aparece al hacer clic en el botón -->
 
<div id="detallesNomina" class="mt-4 p-3 bg-white border border-gray-300 rounded-lg hidden">
  <h4 class="font-semibold mb-2 text-gray-700">Empresas seleccionadas</h4>
  <div class="grid grid-cols-2 gap-4 text-sm">
    <div class="space-y-2">
      <label class="flex items-center space-x-2">
        <input type="checkbox" checked disabled class="form-checkbox h-4 w-4 text-blue-600 rounded border-gray-300" />
        <span>Hidrosina Plus SAPI de C.V.</span>
      </label>
      <label class="flex items-center space-x-2">
        <input type="checkbox" checked disabled class="form-checkbox h-4 w-4 text-blue-600 rounded border-gray-300" />
        <span>Grupo Energético del Centro</span>
      </label>
      <label class="flex items-center space-x-2">
        <input type="checkbox" checked disabled class="form-checkbox h-4 w-4 text-blue-600 rounded border-gray-300" />
        <span>Operadora Energética Total</span>
      </label>
      <label class="flex items-center space-x-2">
        <input type="checkbox" checked disabled class="form-checkbox h-4 w-4 text-blue-600 rounded border-gray-300" />
        <span>Comercializadora de Combustible Premium</span>
      </label>
    </div>
  </div>

  <!-- Botón para ver documento (sin función real, solo muestra el modal) -->
<!-- Botón estilizado para ver documento -->
<div class="mt-4 flex justify-center">
  <button
    onclick="abrirPDF()"
    class="bg-blue-100 text-blue-700 px-5 py-2 rounded-lg text-sm font-medium hover:bg-blue-200 transition shadow-sm"
  >
     Ver todos los documentos
  </button>
</div>

  </div>
</div>




          <!-- Paso 1: Textarea de Envío -->
<div class="border border-dashed border-gray-300 rounded-md p-4 bg-gray-50"> 
  <label class="block text-sm font-medium text-gray-700 mb-2">Envío</label>
  
  <textarea
    id="input-envio"
    rows="4"
    readonly
    class="w-full p-2 border rounded-md bg-gray-100 text-gray-700 cursor-not-allowed"
  >
Los vales por empresa representan una asignación específica de recursos (como combustible, alimentos, servicios u otros beneficios) que una empresa entrega a sus empleados, proveedores o unidades operativas.
  </textarea>

  <div class="flex justify-between items-center mt-2">
    <span class="text-sm text-gray-500">Fijo / Solo lectura</span>
    <button
      id="btn-enviar"
      class="bg-blue-600 text-white px-4 py-1 rounded-md text-sm font-medium opacity-50 cursor-not-allowed"
      disabled
    >
      Enviar
    </button>
  </div>

  <div id="envio-estado" class="hidden mt-4 flex items-center justify-center space-x-2">
    <div class="spinner"></div>
    <span class="text-blue-600 font-semibold">Enviado...</span>
  </div>
</div>

       
    <!-- Botones de acción -->
    <div class="flex justify-center space-x-4 mt-6">
        <button class="bg-gray-600 text-white px-6 py-2 rounded hover:bg-gray-700 transition">
            Volver
        </button>
        <button class="bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700 transition">
            Confirmar
        </button>
    </div>
</div>

<!-- Diálogo para visualizar PDF -->
<div id="pdfDialog" class="fixed inset-0 bg-black bg-opacity-50 hidden">
    <div class="absolute inset-0 flex items-center justify-center">
        <div class="bg-white rounded-lg p-4 w-3/4 h-3/4">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-medium">Visualizar Nóminas</h3>
                <button onclick="cerrarPDF()" class="text-gray-500 hover:text-gray-700">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            <iframe id="pdfViewer" class="w-full h-full border-0"></iframe>
        </div>
    </div>
</div>

<script>
    function abrirPDF() {
        const dialog = document.getElementById('pdfDialog');
        const viewer = document.getElementById('pdfViewer') as HTMLIFrameElement;
        if (dialog && viewer) {
            dialog.classList.remove('hidden');
            viewer.src = '/assets/nominas_ejecutivas.pdf';
        }
    }

    function cerrarPDF() {
        const dialog = document.getElementById('pdfDialog');
        const viewer = document.getElementById('pdfViewer') as HTMLIFrameElement;
        if (dialog && viewer) {
            dialog.classList.add('hidden');
            viewer.src = '';
        }
    }
    
    // Función para mostrar/ocultar los detalles de la nómina
    document.addEventListener('DOMContentLoaded', function() {
        const btnMostrarDetalles = document.getElementById('mostrarDetalles');
        const detallesNomina = document.getElementById('detallesNomina');
        
        if (btnMostrarDetalles && detallesNomina) {
            btnMostrarDetalles.addEventListener('click', function() {
                detallesNomina.classList.toggle('hidden');
                btnMostrarDetalles.textContent = detallesNomina.classList.contains('hidden') 
                    ? 'Mostrar Detalles' 
                    : 'Ocultar Detalles';
            });
        }
    });

      // Boton de enviar funcione
      const envioTextarea = document.getElementById("input-envio");
      const envioEstado = document.getElementById("envio-estado");
      const seccionComprobante = document.getElementById("seccion-comprobante");

      const charCount = document.getElementById("char-count");
      const btnEnviar = document.getElementById("btn-enviar");

      // Función para manejar el conteo de caracteres y habilitar el botón
      envioTextarea.addEventListener("input", (e) => {
        const currentLength = e.target.value.trim().length;
        charCount.textContent = `${currentLength} / 100 caracteres`;

        // Habilitar o deshabilitar el botón según el conteo de caracteres
        if (currentLength >= 100) {
          btnEnviar.disabled = false;
        } else {
          btnEnviar.disabled = true;
        }
      });

      // Función para manejar el envío
      btnEnviar.addEventListener("click", () => {
        // Deshabilitar textarea y botón durante el envío
        envioTextarea.disabled = true;
        btnEnviar.disabled = true;

        // Mostrar animación de carga
        envioEstado.classList.remove("hidden");

        // Simular envío con timeout
        setTimeout(() => {
          envioEstado.classList.add("hidden");
          seccionComprobante.classList.remove("hidden");
        }, 5000);
      });



</script>
</Layout>