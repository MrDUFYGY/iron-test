---
import Layout from '../layouts/Layout.astro';
import "../styles/global.css";
---

<Layout>
  <div class="container mx-auto">
    <!-- Diálogo de confirmación -->
    <div id="confirm-dialog" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
      <div class="bg-white rounded-lg p-6 max-w-4xl w-full relative z-50">
        <h3 class="text-lg font-semibold mb-4">Confirmar carga de archivo</h3>
        <div class="mb-4 border rounded overflow-hidden h-96">
          <iframe id="preview-pdf" class="w-full h-full" title="Vista previa PDF"></iframe>
        </div>
        <div class="flex justify-end space-x-4">
          <button id="cancel-upload" class="px-4 py-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300">Cancelar</button>
          <button id="confirm-upload" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">Guardar y Confirmar</button>
        </div>
      </div>
    </div>

    <!-- Modal de validación de montos -->
    <div id="validation-dialog" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
      <div class="bg-white rounded-lg p-6 max-w-6xl w-full relative z-50">
        <h3 class="text-lg font-semibold mb-4">Validación de Archivos de Listado de Contadores</h3>
        <div class="grid grid-cols-3 gap-4 mb-6">
          <div class="border rounded overflow-hidden h-96">
            <iframe id="preview-pdf1" class="w-full h-full" title="Vista previa PDF 1"></iframe>
          </div>
          <div class="border rounded overflow-hidden h-96">
            <iframe id="preview-pdf2" class="w-full h-full" title="Vista previa PDF 2"></iframe>
          </div>
          <div class="border rounded overflow-hidden h-96">
            <iframe id="preview-pdf3" class="w-full h-full" title="Vista previa PDF 3"></iframe>
          </div>
        </div>
        <div class="flex justify-end space-x-4">
          <button id="cancel-validation" class="px-6 py-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300">Cancelar</button>
          <button id="confirm-and-seal" class="px-6 py-2 bg-green-600 text-white rounded hover:bg-green-700">Confirmar y Sellar</button>
          <button id="reject-validation" class="px-6 py-2 bg-red-600 text-white rounded hover:bg-red-700">Hay Discrepancias</button>
        </div>
      </div>
    </div>

    <!-- Modal de discrepancia -->
    <div id="discrepancy-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
      <div class="bg-white rounded-lg p-6 max-w-md w-full relative z-50">
        <h3 class="text-lg font-semibold mb-4">Discrepancia Detectada</h3>
        <div class="mb-6">
          <p class="text-gray-700 mb-4">Los montos no coinciden con la información proporcionada. Por favor, proceda a cargar los archivos de Open POS para realizar una validación adicional.</p>
          <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                </svg>
              </div>
              <div class="ml-3">
                <p class="text-sm text-yellow-700">
                  Se requiere la carga de archivos adicionales para continuar con el proceso.
                </p>
              </div>
            </div>
          </div>
        </div>
        <div class="flex justify-end">
          <button id="close-discrepancy-modal" class="mr-4 px-4 py-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300">Cerrar</button>
          <button id="continue-to-openpos" class="px-6 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">Cargar Archivos de Open POS</button>
        </div>
      </div>
    </div>

    <!-- Modal de huella digital -->
    <div id="fingerprint-dialog" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
      <div class="bg-white rounded-lg p-6 max-w-md w-full relative z-50">
        <h3 class="text-lg font-semibold mb-4">Validación de Huella Digital</h3>
        <div class="text-center mb-6">
          <div class="w-32 h-32 mx-auto border-2 border-dashed border-gray-300 rounded-full flex items-center justify-center">
            <svg class="w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
            </svg>
          </div>
          <p class="mt-2 text-gray-600">Coloque su dedo en el lector de huella</p>
        </div>
        <div class="flex justify-end space-x-4">
          <button id="cancel-fingerprint" class="px-4 py-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300">Cancelar</button>
          <button id="confirm-fingerprint" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">Confirmar</button>
        </div>
      </div>
    </div>

    <h1 class="text-3xl font-bold text-center mb-8 text-gray-800">Sistema de Carga de Archivos</h1>
    
    <!-- Contenedor principal -->
    <div class="bg-white rounded-lg shadow-lg p-6">
      
      <!-- Pestañas de navegación -->
      <div class="flex border-b border-gray-200 mb-6" id="tabs">
        <button class="px-4 py-2 border-b-2 border-blue-500 text-blue-600 font-medium relative" 
                data-tab="medicion">Listado de Contadores
          <span class="absolute -top-1 -right-1 w-5 h-5 bg-red-500 text-white text-xs rounded-full flex items-center justify-center hidden" id="medicion-pending">0</span>
        </button>
        <button class="px-4 py-2 border-b-2 border-transparent text-gray-400 cursor-not-allowed relative" 
                data-tab="openpos" disabled>Open POS
          <span class="absolute -top-1 -right-1 w-5 h-5 bg-red-500 text-white text-xs rounded-full flex items-center justify-center hidden" id="openpos-pending">0</span>
        </button>
        <button class="px-4 py-2 border-b-2 border-transparent text-gray-400 cursor-not-allowed relative" 
                data-tab="comprobante" disabled>Mediciones con Comprobante
          <span class="absolute -top-1 -right-1 w-5 h-5 bg-red-500 text-white text-xs rounded-full flex items-center justify-center hidden" id="comprobante-pending">0</span>
        </button>
      </div>
      
      <!-- Indicador de progreso -->
      <div class="mb-6">
        <div class="w-full bg-gray-200 rounded-full h-2.5">
          <div class="bg-blue-600 h-2.5 rounded-full transition-all duration-300" id="progress-bar" style="width: 0%"></div>
        </div>
        <div class="flex justify-between mt-2 text-sm text-gray-600">
          <span>0/3 archivos</span>
        </div>
      </div>
      
      <!-- Contenido de las pestañas -->
      <div id="tab-content">
        <!-- Medición -->
        <div id="medicion" class="tab-panel">
          <h2 class="text-xl font-semibold mb-4 text-gray-700">Listado de Contadores</h2>
          <div class="grid grid-cols-3 gap-4">
            <div class="file-upload-container">
              <label class="block text-gray-700 mb-2">Turno 1</label>
              <div class="relative border-2 border-dashed border-gray-300 rounded-lg p-4 hover:border-blue-500 transition-colors">
                <input type="file" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" id="medicion-archivo1" accept=".pdf">
                <div class="text-center">
                  <svg class="mx-auto h-8 w-8 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                    <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                  </svg>
                  <p class="mt-1 text-xs text-gray-600">Haz clic para seleccionar o arrastra un archivo aquí</p>
                </div>
                <div class="absolute top-2 right-2 flex space-x-2">
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="medicion-archivo1-status1"></div>
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="medicion-archivo1-status2"></div>
                </div>
              </div>
              <p class="file-name mt-2 text-xs text-gray-500"></p>
            </div>
            
            <div class="file-upload-container">
              <label class="block text-gray-700 mb-2">Turno 2</label>
              <div class="relative border-2 border-dashed border-gray-300 rounded-lg p-4 hover:border-blue-500 transition-colors">
                <input type="file" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" id="medicion-archivo2" accept=".pdf">
                <div class="text-center">
                  <svg class="mx-auto h-8 w-8 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                    <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                  </svg>
                  <p class="mt-1 text-xs text-gray-600">Haz clic para seleccionar o arrastra un archivo aquí</p>
                </div>
                <div class="absolute top-2 right-2 flex space-x-2">
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="medicion-archivo2-status1"></div>
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="medicion-archivo2-status2"></div>
                </div>
              </div>
              <p class="file-name mt-2 text-xs text-gray-500"></p>
            </div>
            
            <div class="file-upload-container">
              <label class="block text-gray-700 mb-2">Turno 3</label>
              <div class="relative border-2 border-dashed border-gray-300 rounded-lg p-4 hover:border-blue-500 transition-colors">
                <input type="file" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" id="medicion-archivo3" accept=".pdf">
                <div class="text-center">
                  <svg class="mx-auto h-8 w-8 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                    <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                  </svg>
                  <p class="mt-1 text-xs text-gray-600">Haz clic para seleccionar o arrastra un archivo aquí</p>
                </div>
                <div class="absolute top-2 right-2 flex space-x-2">
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="medicion-archivo3-status1"></div>
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="medicion-archivo3-status2"></div>
                </div>
              </div>
              <p class="file-name mt-2 text-xs text-gray-500"></p>
            </div>
          </div>
          
          <div class="mt-8 flex justify-end">
            <button class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 next-btn" data-next="openpos" id="validate-files-btn">
              Validar Archivos
            </button>
          </div>
        </div>
        
        <!-- Open POS -->
        <div id="openpos" class="tab-panel hidden">
          <h2 class="text-xl font-semibold mb-4 text-gray-700">Archivos de Open POS</h2>
          <div class="grid grid-cols-3 gap-4">
            <div class="file-upload-container">
              <label class="block text-gray-700 mb-2">Turno 1</label>
              <div class="relative border-2 border-dashed border-gray-300 rounded-lg p-4 hover:border-blue-500 transition-colors">
                <input type="file" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" id="openpos-archivo1" accept=".pdf">
                <div class="text-center">
                  <svg class="mx-auto h-8 w-8 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                    <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                  </svg>
                  <p class="mt-1 text-xs text-gray-600">Haz clic para seleccionar o arrastra un archivo aquí</p>
                </div>
                <div class="absolute top-2 right-2 flex space-x-2">
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="openpos-archivo1-status1"></div>
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="openpos-archivo1-status2"></div>
                </div>
              </div>
              <p class="file-name mt-2 text-xs text-gray-500"></p>
            </div>
            
            <div class="file-upload-container">
              <label class="block text-gray-700 mb-2">Turno 2</label>
              <div class="relative border-2 border-dashed border-gray-300 rounded-lg p-4 hover:border-blue-500 transition-colors">
                <input type="file" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" id="openpos-archivo2" accept=".pdf">
                <div class="text-center">
                  <svg class="mx-auto h-8 w-8 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                    <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                  </svg>
                  <p class="mt-1 text-xs text-gray-600">Haz clic para seleccionar o arrastra un archivo aquí</p>
                </div>
                <div class="absolute top-2 right-2 flex space-x-2">
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="openpos-archivo2-status1"></div>
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="openpos-archivo2-status2"></div>
                </div>
              </div>
              <p class="file-name mt-2 text-xs text-gray-500"></p>
            </div>
            
            <div class="file-upload-container">
              <label class="block text-gray-700 mb-2">Turno 3</label>
              <div class="relative border-2 border-dashed border-gray-300 rounded-lg p-4 hover:border-blue-500 transition-colors">
                <input type="file" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" id="openpos-archivo3" accept=".pdf">
                <div class="text-center">
                  <svg class="mx-auto h-8 w-8 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                    <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                  </svg>
                  <p class="mt-1 text-xs text-gray-600">Haz clic para seleccionar o arrastra un archivo aquí</p>
                </div>
                <div class="absolute top-2 right-2 flex space-x-2">
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="openpos-archivo3-status1"></div>
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="openpos-archivo3-status2"></div>
                </div>
              </div>
              <p class="file-name mt-2 text-xs text-gray-500"></p>
            </div>
          </div>
          
          <div class="mt-8 flex justify-between">
            <button class="px-6 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50 prev-btn" data-prev="medicion">
              Anterior
            </button>
            <button class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 next-btn" data-next="comprobante">
              Siguiente
            </button>
          </div>
        </div>
        
        <!-- Comprobante -->
        <div id="comprobante" class="tab-panel hidden">
          <h2 class="text-xl font-semibold mb-4 text-gray-700">Archivos de Mediciones con Comprobante</h2>
          <div class="grid grid-cols-3 gap-4">
            <div class="file-upload-container">
              <label class="block text-gray-700 mb-2">Turno 1</label>
              <div class="relative border-2 border-dashed border-gray-300 rounded-lg p-4 hover:border-blue-500 transition-colors">
                <input type="file" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" id="comprobante-archivo1" accept=".pdf">
                <div class="text-center">
                  <svg class="mx-auto h-8 w-8 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                    <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                  </svg>
                  <p class="mt-1 text-xs text-gray-600">Haz clic para seleccionar o arrastra un archivo aquí</p>
                </div>
                <div class="absolute top-2 right-2 flex space-x-2">
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="comprobante-archivo1-status1"></div>
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="comprobante-archivo1-status2"></div>
                </div>
              </div>
              <p class="file-name mt-2 text-xs text-gray-500"></p>
            </div>
            
            <div class="file-upload-container">
              <label class="block text-gray-700 mb-2">Turno 2</label>
              <div class="relative border-2 border-dashed border-gray-300 rounded-lg p-4 hover:border-blue-500 transition-colors">
                <input type="file" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" id="comprobante-archivo2" accept=".pdf">
                <div class="text-center">
                  <svg class="mx-auto h-8 w-8 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                    <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                  </svg>
                  <p class="mt-1 text-xs text-gray-600">Haz clic para seleccionar o arrastra un archivo aquí</p>
                </div>
                <div class="absolute top-2 right-2 flex space-x-2">
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="comprobante-archivo2-status1"></div>
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="comprobante-archivo2-status2"></div>
                </div>
              </div>
              <p class="file-name mt-2 text-xs text-gray-500"></p>
            </div>
            
            <div class="file-upload-container">
              <label class="block text-gray-700 mb-2">Turno 3</label>
              <div class="relative border-2 border-dashed border-gray-300 rounded-lg p-4 hover:border-blue-500 transition-colors">
                <input type="file" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" id="comprobante-archivo3" accept=".pdf">
                <div class="text-center">
                  <svg class="mx-auto h-8 w-8 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                    <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                  </svg>
                  <p class="mt-1 text-xs text-gray-600">Haz clic para seleccionar o arrastra un archivo aquí</p>
                </div>
                <div class="absolute top-2 right-2 flex space-x-2">
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="comprobante-archivo3-status1"></div>
                  <div class="w-3 h-3 rounded-full bg-gray-200" id="comprobante-archivo3-status2"></div>
                </div>
              </div>
              <p class="file-name mt-2 text-xs text-gray-500"></p>
            </div>
          </div>
          
          <div class="mt-8 flex justify-between">
            <button class="px-6 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50 prev-btn" data-prev="openpos">
              Anterior
            </button>
            <button class="px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50" id="submit-all">
              Enviar Todos los Archivos
            </button>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Resumen de archivos cargados -->
    <div class="mt-8 bg-white rounded-lg shadow-lg p-6">
      <h2 class="text-xl font-semibold mb-4 text-gray-700">Resumen de Archivos</h2>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div>
          <h3 class="font-medium text-gray-700 mb-2">Listado de Contadores</h3>
          <ul class="list-disc list-inside text-sm text-gray-600" id="medicion-summary">
            <li>Sin archivos seleccionados</li>
          </ul>
        </div>
        <div>
          <h3 class="font-medium text-gray-700 mb-2">Open POS</h3>
          <ul class="list-disc list-inside text-sm text-gray-600" id="openpos-summary">
            <li>Sin archivos seleccionados</li>
          </ul>
        </div>
        <div>
          <h3 class="font-medium text-gray-700 mb-2">Comprobantes</h3>
          <ul class="list-disc list-inside text-sm text-gray-600" id="comprobante-summary">
            <li>Sin archivos seleccionados</li>
          </ul>
        </div>
      </div>
    </div>
  </div>

  <script type="module">
    // Funcionalidad de pestañas
    document.addEventListener('DOMContentLoaded', function() {
      const tabs = document.querySelectorAll('[data-tab]');
      const tabPanels = document.querySelectorAll('.tab-panel');
      const progressBar = document.getElementById('progress-bar');
      const nextButtons = document.querySelectorAll('.next-btn');
      const prevButtons = document.querySelectorAll('.prev-btn');
      const fileInputs = document.querySelectorAll('input[type="file"]');
      const submitButton = document.getElementById('submit-all');
      const confirmDialog = document.getElementById('confirm-dialog');
      const confirmUploadBtn = document.getElementById('confirm-upload');
      const cancelUploadBtn = document.getElementById('cancel-upload');
      const previewPdf = document.getElementById('preview-pdf');
      
      // Nuevos elementos para validación
      const validationDialog = document.getElementById('validation-dialog');
      const confirmValidationBtn = document.getElementById('confirm-and-seal');
      const rejectValidationBtn = document.getElementById('reject-validation');
      const cancelValidationBtn = document.getElementById('cancel-validation');
      const fingerprintDialog = document.getElementById('fingerprint-dialog');
      const confirmFingerprintBtn = document.getElementById('confirm-fingerprint');
      const cancelFingerprintBtn = document.getElementById('cancel-fingerprint');
      const validateFilesBtn = document.getElementById('validate-files-btn');
      const discrepancyModal = document.getElementById('discrepancy-modal');
      const closeDiscrepancyBtn = document.getElementById('close-discrepancy-modal');
      const continueToOpenposBtn = document.getElementById('continue-to-openpos');
      
      let currentFileInput = null;
      let currentFile = null;
      let currentFileUrl = null;
      let uploadedFiles = new Set();
      let totalFiles = 3; // Inicialmente solo 3 archivos
      let validationRequired = true;

      // Función para cerrar todos los modales
      function closeAllModals() {
        const modals = [
          confirmDialog,
          validationDialog,
          fingerprintDialog,
          discrepancyModal
        ];
        
        modals.forEach(modal => {
          if (modal) {
            modal.classList.add('hidden');
          }
        });

        // Limpiar las URLs de los PDFs
        const pdfPreviews = ['preview-pdf1', 'preview-pdf2', 'preview-pdf3'];
        pdfPreviews.forEach(id => {
          const iframe = document.getElementById(id);
          if (iframe) {
            iframe.src = '';
          }
        });

        // Limpiar la URL del PDF actual
        if (currentFileUrl) {
          URL.revokeObjectURL(currentFileUrl);
          currentFileUrl = null;
        }
      }

      // Función para actualizar el progreso
      function updateProgress() {
        const uploadedCount = uploadedFiles.size;
        const progress = (uploadedCount / totalFiles) * 100;
        
        progressBar.style.width = `${progress}%`;
        progressBar.parentElement.nextElementSibling.querySelector('span').textContent = `${uploadedCount}/${totalFiles} archivos`;
        
        // Si se han subido los 3 archivos iniciales y se requiere validación
        if (uploadedCount === 3 && validationRequired) {
          showValidationDialog();
        }
      }

      // Función para mostrar el diálogo de validación
      function showValidationDialog() {
        const medicionFiles = Array.from(fileInputs)
          .filter(input => input.id.startsWith('medicion'))
          .map(input => input.files[0])
          .filter(file => file);

        if (medicionFiles.length === 3) {
          // Mostrar los PDFs en el diálogo de validación
          document.getElementById('preview-pdf1').src = URL.createObjectURL(medicionFiles[0]);
          document.getElementById('preview-pdf2').src = URL.createObjectURL(medicionFiles[1]);
          document.getElementById('preview-pdf3').src = URL.createObjectURL(medicionFiles[2]);
          
          validationDialog.classList.remove('hidden');
        }
      }

      // Función para mostrar el diálogo de huella digital
      function showFingerprintDialog() {
        closeAllModals();
        fingerprintDialog.classList.remove('hidden');
      }

      // Función para validar que se hayan subido los 3 archivos
      function validateUploadedFiles() {
        const medicionFiles = Array.from(fileInputs)
          .filter(input => input.id.startsWith('medicion'))
          .map(input => input.files[0])
          .filter(file => file);

        return medicionFiles.length === 3;
      }

      // Event listener para el botón de validación
      validateFilesBtn.addEventListener('click', () => {
        if (validateUploadedFiles()) {
          showValidationDialog();
        } else {
          alert('Por favor, suba los 3 archivos de Listado de Contadores antes de continuar.');
        }
      });

      // Event listeners para el diálogo de validación
      confirmValidationBtn.addEventListener('click', () => {
        closeAllModals();
        showFingerprintDialog();
      });

      rejectValidationBtn.addEventListener('click', () => {
        validationDialog.classList.add('hidden');
        discrepancyModal.classList.remove('hidden');
      });

      cancelValidationBtn.addEventListener('click', () => {
        validationDialog.classList.add('hidden');
        
        // Limpiar las URLs de los PDFs
        const pdfPreviews = ['preview-pdf1', 'preview-pdf2', 'preview-pdf3'];
        pdfPreviews.forEach(id => {
          const iframe = document.getElementById(id);
          if (iframe) {
            iframe.src = '';
          }
        });
      });

      // Event listener para el diálogo de huella digital
      confirmFingerprintBtn.addEventListener('click', () => {
        closeAllModals();
        // Aquí iría la lógica para redirigir al index
        window.location.href = '/';
      });

      cancelFingerprintBtn.addEventListener('click', () => {
        closeAllModals();
      });

      // Event listener para el modal de discrepancia
      closeDiscrepancyBtn.addEventListener('click', () => {
        discrepancyModal.classList.add('hidden');
      });

      // Event listener para continuar a Open POS
      continueToOpenposBtn.addEventListener('click', () => {
        discrepancyModal.classList.add('hidden');
        validationDialog.classList.add('hidden');
        enableTab('openpos');
        totalFiles = 6;
        updateProgress();
        switchTab('openpos');
      });

      // Función para habilitar una pestaña
      function enableTab(tabId) {
        const tab = document.querySelector(`[data-tab="${tabId}"]`);
        if (tab) {
          tab.classList.remove('text-gray-400', 'cursor-not-allowed');
          tab.classList.add('text-gray-500', 'hover:text-gray-700');
          tab.removeAttribute('disabled');
        }
      }

      // Función para cambiar de pestaña
      function switchTab(tabId) {
        // Verificar si la pestaña está habilitada
        const tab = document.querySelector(`[data-tab="${tabId}"]`);
        if (tab && tab.hasAttribute('disabled')) {
          return; // No cambiar si la pestaña está deshabilitada
        }

        // Ocultar todos los paneles
        tabPanels.forEach(panel => {
          panel.classList.add('hidden');
        });
        
        // Mostrar el panel seleccionado
        document.getElementById(tabId).classList.remove('hidden');
        
        // Actualizar estilos de las pestañas
        tabs.forEach(tab => {
          if (tab.dataset.tab === tabId) {
            tab.classList.add('border-blue-500', 'text-blue-600');
            tab.classList.remove('border-transparent', 'text-gray-500');
          } else {
            tab.classList.remove('border-blue-500', 'text-blue-600');
            tab.classList.add('border-transparent', 'text-gray-500');
          }
        });
      }
      
      // Event listeners para las pestañas
      tabs.forEach(tab => {
        tab.addEventListener('click', () => {
          switchTab(tab.dataset.tab);
        });
      });
      
      // Event listeners para los botones de siguiente
      nextButtons.forEach(button => {
        button.addEventListener('click', () => {
          switchTab(button.dataset.next);
        });
      });
      
      // Event listeners para los botones de anterior
      prevButtons.forEach(button => {
        button.addEventListener('click', () => {
          switchTab(button.dataset.prev);
        });
      });
      
      // Función para actualizar el resumen
      function updateSummary() {
        const medicionFiles = [
          document.getElementById('medicion-archivo1').files[0],
          document.getElementById('medicion-archivo2').files[0],
          document.getElementById('medicion-archivo3').files[0]
        ];
        
        const openposFiles = [
          document.getElementById('openpos-archivo1').files[0],
          document.getElementById('openpos-archivo2').files[0],
          document.getElementById('openpos-archivo3').files[0]
        ];
        
        const comprobanteFiles = [
          document.getElementById('comprobante-archivo1').files[0],
          document.getElementById('comprobante-archivo2').files[0],
          document.getElementById('comprobante-archivo3').files[0]
        ];
        
        // Actualizar resumen de la sección de Medición
        const medicionSummary = document.getElementById('medicion-summary');
        medicionSummary.innerHTML = '';
        
        if (medicionFiles.some(file => file)) {
          medicionFiles.forEach((file, index) => {
            if (file) {
              const li = document.createElement('li');
              li.textContent = `Archivo ${index + 1}: ${file.name}`;
              medicionSummary.appendChild(li);
            }
          });
        } else {
          medicionSummary.innerHTML = '<li>Sin archivos seleccionados</li>';
        }
        
        // Actualizar resumen de la sección de Open POS
        const openposSummary = document.getElementById('openpos-summary');
        openposSummary.innerHTML = '';
        
        if (openposFiles.some(file => file)) {
          openposFiles.forEach((file, index) => {
            if (file) {
              const li = document.createElement('li');
              li.textContent = `Archivo ${index + 1}: ${file.name}`;
              openposSummary.appendChild(li);
            }
          });
        } else {
          openposSummary.innerHTML = '<li>Sin archivos seleccionados</li>';
        }
        
        // Actualizar resumen de la sección de Comprobantes
        const comprobanteSummary = document.getElementById('comprobante-summary');
        comprobanteSummary.innerHTML = '';
        
        if (comprobanteFiles.some(file => file)) {
          comprobanteFiles.forEach((file, index) => {
            if (file) {
              const li = document.createElement('li');
              li.textContent = `Archivo ${index + 1}: ${file.name}`;
              comprobanteSummary.appendChild(li);
            }
          });
        } else {
          comprobanteSummary.innerHTML = '<li>Sin archivos seleccionados</li>';
        }
      }
      
      // Event listener para el botón de enviar
      submitButton.addEventListener('click', function() {
        // Aquí iría la lógica para enviar los archivos al servidor
        alert('Archivos listos para enviar. Aquí implementarías la lógica de envío al servidor.');
      });

      // Event listener para el botón de validación de Open POS
      const openposValidationBtn = document.getElementById('openpos-validation-btn');
      if (openposValidationBtn) {
        openposValidationBtn.addEventListener('click', () => {
          if (validateOpenposFiles()) {
            showOpenposValidationDialog();
          } else {
            alert('Por favor, suba los 3 archivos de Open POS antes de continuar.');
          }
        });
      }

      // Función para validar archivos de Open POS
      function validateOpenposFiles() {
        const openposFiles = Array.from(fileInputs)
          .filter(input => input.id.startsWith('openpos'))
          .map(input => input.files[0])
          .filter(file => file);

        return openposFiles.length === 3;
      }

      // Función para mostrar el diálogo de validación de Open POS
      function showOpenposValidationDialog() {
        const openposFiles = Array.from(fileInputs)
          .filter(input => input.id.startsWith('openpos'))
          .map(input => input.files[0])
          .filter(file => file);

        if (openposFiles.length === 3) {
          // Mostrar los PDFs en el diálogo de validación
          document.getElementById('preview-pdf1').src = URL.createObjectURL(openposFiles[0]);
          document.getElementById('preview-pdf2').src = URL.createObjectURL(openposFiles[1]);
          document.getElementById('preview-pdf3').src = URL.createObjectURL(openposFiles[2]);
          
          validationDialog.classList.remove('hidden');
        }
      }

      // Función para mostrar el diálogo de confirmación
      function showConfirmDialog(fileInput, file) {
        closeAllModals();
        currentFileInput = fileInput;
        currentFile = file;
        currentFileUrl = URL.createObjectURL(file);
        previewPdf.src = currentFileUrl;
        confirmDialog.classList.remove('hidden');
      }

      // Función para ocultar el diálogo de confirmación
      function hideConfirmDialog() {
        closeAllModals();
        currentFileInput = null;
        currentFile = null;
      }

      // Función para actualizar el estado de las marcas de validación
      function updateValidationStatus(inputId, status1, status2) {
        const status1Element = document.getElementById(`${inputId}-status1`);
        const status2Element = document.getElementById(`${inputId}-status2`);
        const container = document.getElementById(inputId).closest('.file-upload-container');
        
        if (status1Element) {
          status1Element.classList.remove('bg-gray-200', 'bg-green-500', 'bg-red-500');
          status1Element.classList.add(status1);
        }
        
        if (status2Element) {
          status2Element.classList.remove('bg-gray-200', 'bg-green-500', 'bg-red-500');
          status2Element.classList.add(status2);
        }

        // Actualizar el borde del contenedor
        if (status1 === 'bg-green-500') {
          container.querySelector('.relative').classList.add('border-green-500');
          container.querySelector('.relative').classList.remove('border-gray-300');
        } else {
          container.querySelector('.relative').classList.remove('border-green-500');
          container.querySelector('.relative').classList.add('border-gray-300');
        }
      }

      // Event listeners para el diálogo de confirmación
      confirmUploadBtn.addEventListener('click', () => {
        if (currentFileInput && currentFile) {
          const container = currentFileInput.closest('.file-upload-container');
          const fileNameElement = container.querySelector('.file-name');
          
          fileNameElement.textContent = currentFile.name;
          updateValidationStatus(currentFileInput.id, 'bg-green-500', 'bg-gray-200');
          uploadedFiles.add(currentFileInput.id);
          
          updateProgress();
          updateSummary();
        }
        hideConfirmDialog();
      });

      cancelUploadBtn.addEventListener('click', () => {
        if (currentFileInput) {
          currentFileInput.value = '';
          updateValidationStatus(currentFileInput.id, 'bg-gray-200', 'bg-gray-200');
          uploadedFiles.delete(currentFileInput.id);
          updateProgress();
        }
        hideConfirmDialog();
      });

      // Event listeners para los inputs de archivo
      fileInputs.forEach(input => {
        input.addEventListener('change', function(e) {
          const file = this.files[0];
          if (file) {
            if (file.type === 'application/pdf') {
              showConfirmDialog(this, file);
            } else {
              alert('Por favor, selecciona solo archivos PDF');
              this.value = '';
              updateValidationStatus(this.id, 'bg-red-500', 'bg-gray-200');
            }
          }
        });

        // Manejo de arrastrar y soltar
        const container = input.closest('.file-upload-container');
        container.addEventListener('dragover', (e) => {
          e.preventDefault();
          container.classList.add('border-blue-500');
        });

        container.addEventListener('dragleave', () => {
          container.classList.remove('border-blue-500');
        });

        container.addEventListener('drop', (e) => {
          e.preventDefault();
          container.classList.remove('border-blue-500');
          
          const file = e.dataTransfer.files[0];
          if (file) {
            if (file.type === 'application/pdf') {
              input.files = e.dataTransfer.files;
              showConfirmDialog(input, file);
            } else {
              alert('Por favor, arrastra solo archivos PDF');
              updateValidationStatus(input.id, 'bg-red-500', 'bg-gray-200');
            }
          }
        });
      });
    });
  </script>
    
</Layout>